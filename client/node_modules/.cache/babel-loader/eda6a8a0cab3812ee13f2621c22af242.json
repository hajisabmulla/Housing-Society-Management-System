{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project Housing Society\\\\client\\\\src\\\\SocietyMemberpages\\\\SocietyMemberSignUp.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SocietyMemberSignUp = props => {\n  _s();\n\n  const [error, setError] = useState(false);\n  let [SocietyMember, setSocietyMember] = useState({\n    fname: \"\",\n    lname: \"\",\n    username: \"\",\n    address: \"\",\n    password: \"\",\n    contactNo: \"\"\n  });\n  const [validation, setValidation] = useState({\n    fname: \"\",\n    lname: \"\",\n    username: \"\",\n    address: \"\",\n    password: \"\",\n    contactNo: \"\"\n  });\n\n  const checkValidation = () => {\n    let errors = JSON.parse(JSON.stringify(validation)); //first Name validation\n\n    const fname = SocietyMember.fname;\n\n    if (!SocietyMember.fname.trim()) {\n      errors.fname = \"First Name is required\";\n    } else if (fname.length < 4) {\n      errors.fname = \"First Name must be longer than 4  characters\";\n    } else {\n      errors.fname = \"\";\n    } //Last Name validation\n\n\n    const lname = SocietyMember.lname;\n\n    if (!SocietyMember.lname.trim()) {\n      errors.lname = \"Last Name is required\";\n    } else if (lname.length < 4) {\n      errors.lname = \"Last Name must be longer than 4  characters\";\n    } else {\n      errors.lname = \"\";\n    } //User Name validation\n\n\n    const username = SocietyMember.username;\n\n    if (!SocietyMember.username.trim()) {\n      errors.username = \"Username is required\";\n    } else if (username.length < 4) {\n      errors.username = \"Username must be longer than 4  characters\";\n    } else {\n      errors.username = \"\";\n    } //address validation\n\n\n    const address = SocietyMember.address;\n\n    if (!SocietyMember.address.trim()) {\n      errors.address = \"address is required\";\n    } else if (address.length < 6) {\n      errors.address = \"address must be longer than 4  characters\";\n    } else {\n      errors.address = \"\";\n    } //password validation\n\n\n    const cond1 = \"/^(?=.*[a-z]).{6,20}$/\";\n    const cond2 = \"/^(?=.*[A-Z]).{6,20}$\";\n    const cond3 = \"/^(?=.*[0-9]).{6,20}$\"; //  const cond2 = \"/^(?=.*[A-Z]).{6,20}$/\";\n    //  const cond3 = \"/^(?=.*[0-9]).{6,20}$/\";\n\n    const password = SocietyMember.password;\n\n    if (!password) {\n      errors.password = \"Password is required\";\n    } else if (SocietyMember.password.length < 6) {\n      errors.password = \"Password must be longer than 6 characters\";\n    } else if (SocietyMember.password.length >= 20) {\n      errors.password = \"Password must shorter than 20 characters\";\n    } else if (SocietyMember.password.match(cond1)) {\n      errors.password = \"Password must contain at least one lowercase\";\n    } else if (SocietyMember.password.match(cond2)) {\n      errors.password = \"Password must contain at least one capital letter\";\n    } else if (SocietyMember.password.match(cond3)) {\n      errors.password = \"Password must contain at least a number\";\n    } else {\n      errors.password = \"\";\n    } //contactNo validation\n\n\n    const contactNo = SocietyMember.contactNo;\n\n    if (!SocietyMember.contactNo.trim()) {\n      errors.contactNo = \"contactNo is required\";\n    } else if (contactNo.length < 10) {\n      errors.contactNo = \"contactNo must be 10 characters\";\n    } else if (contactNo.length > 10) {\n      errors.contactNo = \"contactNo must be 10 characters\";\n    } else {\n      errors.contactNo = \"\";\n    }\n\n    setValidation(errors);\n  };\n\n  useEffect(() => {\n    checkValidation();\n  }, [SocietyMember]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const {\n      fname,\n      lname,\n      username,\n      address,\n      password,\n      contactNo\n    } = SocietyMember;\n\n    try {\n      const res = await axios.post(\"http://localhost:8000/api/auth/SocietyMembers\", {\n        fname,\n        lname,\n        username,\n        address,\n        password,\n        contactNo\n      });\n      res.data && window.location.replace(\"/SocietyMemberLogin\");\n      alert(\"Account successfully created\", \"success\");\n    } catch (err) {\n      setError(true);\n    }\n  };\n\n  function handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setSocietyMember({ ...SocietyMember,\n      [name]: value\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"SignUp-page\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"App\",\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"SP-right\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"SocietyMember\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"fname\",\n          id: \"fname\",\n          placeholder: \"Enter First Name\",\n          className: \"form-control\",\n          onChange: e => handleChange(e),\n          value: SocietyMember.fname,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 20\n        }, this), validation.fname && /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: \"red\",\n            paddingLeft: \"10px\",\n            fontSize: \"18px\",\n            marginTop: \"10px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: validation.fname\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 123\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 42\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"lname\",\n          id: \"lname\",\n          placeholder: \"Enter Last Name\",\n          className: \"form-control\",\n          onChange: e => handleChange(e),\n          value: SocietyMember.lname,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 20\n        }, this), validation.lname && /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: \"red\",\n            paddingLeft: \"10px\",\n            fontSize: \"18px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: validation.lname\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 105\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 42\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Enter User Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 20\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"username\",\n            id: \"username\",\n            placeholder: \"Enter UserName\",\n            className: \"form-control\",\n            onChange: e => handleChange(e),\n            value: SocietyMember.username,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 20\n          }, this), validation.username && /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: \"red\",\n              paddingLeft: \"10px\",\n              fontSize: \"18px\",\n              marginTop: \"10px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: validation.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 126\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 45\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Enter Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 20\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"address\",\n            id: \"address\",\n            placeholder: \"Enter Flat No\",\n            className: \"form-control\",\n            onChange: e => handleChange(e),\n            value: SocietyMember.address,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 20\n          }, this), validation.address && /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: \"red\",\n              paddingLeft: \"10px\",\n              fontSize: \"18px\",\n              marginTop: \"10px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: validation.address\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 125\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 44\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Set Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 20\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"password\",\n            id: \"password\",\n            placeholder: \"Enter Password..\",\n            className: \"form-control\",\n            onChange: e => handleChange(e),\n            value: SocietyMember.password,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 20\n          }, this), validation.password && /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: \"red\",\n              paddingLeft: \"10px\",\n              fontSize: \"18px\",\n              marginTop: \"10px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: validation.password\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 126\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 45\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Enter Contact No (Must be 10 digit only)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 20\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"contactNo\",\n            id: \"contactNo\",\n            placeholder: \"Contact No..\",\n            className: \"form-control\",\n            onChange: e => handleChange(e),\n            value: SocietyMember.contactNo,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 20\n          }, this), validation.contactNo && /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: \"red\",\n              paddingLeft: \"10px\",\n              fontSize: \"18px\",\n              marginTop: \"10px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: validation.contactNo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 127\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 46\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-create\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 16\n        }, this), error && /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: \"red\",\n            paddingLeft: \"10px\",\n            fontSize: \"20px\",\n            marginTop: \"10px\"\n          },\n          children: \"Invalid Details!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 165,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SocietyMemberSignUp, \"+nKIYaO0aP+I5gZ8B4NhcdU9Qcg=\");\n\n_c = SocietyMemberSignUp;\nexport default SocietyMemberSignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SocietyMemberSignUp\");","map":{"version":3,"sources":["D:/Project Housing Society/client/src/SocietyMemberpages/SocietyMemberSignUp.js"],"names":["axios","React","useState","useEffect","SocietyMemberSignUp","props","error","setError","SocietyMember","setSocietyMember","fname","lname","username","address","password","contactNo","validation","setValidation","checkValidation","errors","JSON","parse","stringify","trim","length","cond1","cond2","cond3","match","handleSubmit","e","preventDefault","res","post","data","window","location","replace","alert","err","handleChange","event","name","value","target","color","paddingLeft","fontSize","marginTop"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport React from 'react'\r\nimport {useState,useEffect } from 'react'\r\n\r\n\r\n\r\nconst SocietyMemberSignUp = (props) => {\r\n\r\n  \r\n  const [error, setError] = useState(false);\r\n  \r\n  let [SocietyMember, setSocietyMember] = useState({\r\n    \r\n    fname:\"\",\r\n    lname:\"\",\r\n    username:\"\",\r\n    address:\"\",\r\n    password:\"\",\r\n    contactNo:\"\",\r\n   \r\n\r\n\r\n    });\r\n    \r\n    const [validation, setValidation] = useState({\r\n      fname:\"\",\r\n      lname:\"\",\r\n      username:\"\",\r\n      address:\"\",\r\n      password:\"\",\r\n      contactNo:\"\",\r\n     \r\n      \r\n    });\r\n\r\n\r\n    const checkValidation = () => {\r\n      let errors = JSON.parse(JSON.stringify(validation));\r\n      \r\n      //first Name validation\r\n      const fname = SocietyMember.fname;\r\n      if (!SocietyMember.fname.trim()) {\r\n        errors.fname = \"First Name is required\";\r\n      } else if (fname.length < 4) {\r\n        errors.fname = \"First Name must be longer than 4  characters\";\r\n      }else {\r\n        errors.fname = \"\";\r\n      }\r\n\r\n        //Last Name validation\r\n        const lname = SocietyMember.lname;\r\n        if (!SocietyMember.lname.trim()) {\r\n          errors.lname = \"Last Name is required\";\r\n        } else if (lname.length < 4) {\r\n          errors.lname = \"Last Name must be longer than 4  characters\";\r\n        }else {\r\n          errors.lname = \"\";\r\n        }\r\n  \r\n\r\n\r\n      //User Name validation\r\n      const username = SocietyMember.username;\r\n      if (!SocietyMember.username.trim()) {\r\n        errors.username = \"Username is required\";\r\n      } else if (username.length < 4) {\r\n        errors.username = \"Username must be longer than 4  characters\";\r\n      }else {\r\n        errors.username = \"\";\r\n      }\r\n\r\n        //address validation\r\n        const address = SocietyMember.address;\r\n        if (!SocietyMember.address.trim()) {\r\n          errors.address = \"address is required\";\r\n        } else if (address.length < 6) {\r\n          errors.address = \"address must be longer than 4  characters\";\r\n        }else {\r\n          errors.address = \"\";\r\n        }\r\n  \r\n     \r\n  \r\n     //password validation\r\n     const cond1 = \"/^(?=.*[a-z]).{6,20}$/\";\r\n     const cond2 = \"/^(?=.*[A-Z]).{6,20}$\";\r\n     const cond3 = \"/^(?=.*[0-9]).{6,20}$\";\r\n     //  const cond2 = \"/^(?=.*[A-Z]).{6,20}$/\";\r\n    //  const cond3 = \"/^(?=.*[0-9]).{6,20}$/\";\r\n     const password = SocietyMember.password;\r\n     if (!password) {\r\n       errors.password = \"Password is required\";\r\n     } else if (SocietyMember.password.length < 6) {\r\n       errors.password = \"Password must be longer than 6 characters\";\r\n     } else if (SocietyMember.password.length >= 20) {\r\n       errors.password = \"Password must shorter than 20 characters\";\r\n     } else if(SocietyMember.password.match(cond1)) {\r\n        errors.password = \"Password must contain at least one lowercase\";\r\n      } \r\n      else if (SocietyMember.password.match(cond2)) {\r\n        errors.password = \"Password must contain at least one capital letter\";\r\n      } else if (SocietyMember.password.match(cond3)) {\r\n        errors.password = \"Password must contain at least a number\";\r\n      }\r\n      else {\r\n       errors.password = \"\";\r\n     }\r\n\r\n\r\n      //contactNo validation\r\n      const contactNo = SocietyMember.contactNo;\r\n      if (!SocietyMember.contactNo.trim()) {\r\n        errors.contactNo = \"contactNo is required\";\r\n      } else if (contactNo.length < 10) {\r\n        errors.contactNo = \"contactNo must be 10 characters\";\r\n      }\r\n      else if (contactNo.length > 10) {\r\n        errors.contactNo = \"contactNo must be 10 characters\";\r\n      }else {\r\n        errors.contactNo = \"\";\r\n      }\r\n\r\n  \r\n    \r\n  \r\n     setValidation(errors);\r\n   };\r\n  \r\n   useEffect(() => {\r\n    checkValidation();\r\n  }, [SocietyMember]);\r\n  \r\n\r\n    const handleSubmit = async (e) => {\r\n      e.preventDefault();\r\n      const {fname, lname, username, address,  password, contactNo } = SocietyMember;\r\n      try{\r\n      const res = await axios.post(\"http://localhost:8000/api/auth/SocietyMembers\", {\r\n       \r\n\r\n     \r\n\r\n\r\n          fname,lname,  username,address, password,contactNo,\r\n  \r\n      })\r\n      res.data && window.location.replace(\"/SocietyMemberLogin\");\r\n    \r\n          alert(\"Account successfully created\", \"success\");\r\n          \r\n      }\r\n      catch(err){\r\n        setError(true);\r\n       \r\n      }\r\n      \r\n  }\r\n  \r\n  function handleChange(event) {\r\n    const { name, value } = event.target;\r\n    setSocietyMember({ ...SocietyMember, [name]: value });\r\n  }\r\n\r\n  return (\r\n    <div className='SignUp-page'>\r\n      \r\n      \r\n    <form className=\"App\" onSubmit={handleSubmit}>\r\n\r\n        <div className='SP-right'>\r\n      <h1>SocietyMember</h1>\r\n               \r\n               \r\n                   <label>First Name</label>\r\n                   <input type=\"text\" \r\n                   name=\"fname\" \r\n                   \r\n                   id=\"fname\"  \r\n                   placeholder=\"Enter First Name\" \r\n                   className=\"form-control\"\r\n                  \r\n                   onChange={(e) => handleChange(e)}\r\n                   value={SocietyMember.fname}\r\n                   required\r\n                  \r\n                  \r\n                  />\r\n                   {validation.fname &&  <span style={{color:\"red\",paddingLeft:\"10px\",fontSize:\"18px\", marginTop:\"10px\"}}><p>{validation.fname}</p></span>}\r\n               \r\n\r\n               \r\n                   <label>Last Name</label>\r\n                   <input type=\"text\" \r\n                    name=\"lname\"                 \r\n                    id=\"lname\" \r\n                    placeholder=\"Enter Last Name\"\r\n                    className=\"form-control\"\r\n                  \r\n                    onChange={(e) => handleChange(e)}\r\n                    value={SocietyMember.lname}\r\n                    required\r\n                    \r\n                  \r\n                  \r\n                  />\r\n                   {validation.lname &&  <span style={{color:\"red\",paddingLeft:\"10px\",fontSize:\"18px\"}}><p>{validation.lname}</p></span>}\r\n               \r\n\r\n              \r\n\r\n               <div>\r\n                   <label>Enter User Name</label>\r\n                   <input type=\"text\" \r\n                    name=\"username\" \r\n                    id=\"username\" \r\n                    placeholder=\"Enter UserName\" \r\n                    className=\"form-control\"\r\n                  \r\n                    onChange={(e) => handleChange(e)}\r\n                    value={SocietyMember.username}\r\n                    required\r\n                   \r\n   \r\n                  \r\n                  />\r\n                   {validation.username &&  <span style={{color:\"red\",paddingLeft:\"10px\",fontSize:\"18px\", marginTop:\"10px\"}}><p>{validation.username}</p></span>}\r\n                 \r\n               </div>\r\n\r\n               <div>\r\n                   <label>Enter Address</label>\r\n                   <input type=\"text\" \r\n                   name=\"address\" \r\n                   \r\n                   id=\"address\" \r\n                   placeholder=\"Enter Flat No\" \r\n                   className=\"form-control\"\r\n                  \r\n                   onChange={(e) => handleChange(e)}\r\n                   value={SocietyMember.address}\r\n                   required\r\n                  \r\n                  \r\n                  \r\n                  />\r\n                   {validation.address &&  <span style={{color:\"red\",paddingLeft:\"10px\",fontSize:\"18px\", marginTop:\"10px\"}}><p>{validation.address}</p></span>}\r\n               </div>\r\n\r\n               <div>\r\n                   <label>Set Password</label>\r\n                   <input type=\"password\" \r\n                   name=\"password\" \r\n                   id=\"password\" \r\n                   placeholder=\"Enter Password..\" \r\n                   className=\"form-control\"\r\n                   \r\n                   onChange={(e) => handleChange(e)}\r\n                   value={SocietyMember.password}\r\n                   required\r\n                  \r\n                  \r\n                  \r\n                  \r\n                  />\r\n                   {validation.password &&  <span style={{color:\"red\",paddingLeft:\"10px\",fontSize:\"18px\", marginTop:\"10px\"}}><p>{validation.password}</p></span>}\r\n                 \r\n               </div>\r\n\r\n\r\n               <div>\r\n                   <label>Enter Contact No (Must be 10 digit only)</label>\r\n                   <input type=\"number\" \r\n                   name=\"contactNo\" \r\n                    id=\"contactNo\" \r\n                    placeholder=\"Contact No..\" \r\n                    className=\"form-control\"\r\n                    onChange={(e) => handleChange(e)}\r\n                    value={SocietyMember.contactNo}\r\n                    required\r\n                   \r\n                  \r\n                  \r\n                  \r\n                  />\r\n                   {validation.contactNo &&  <span style={{color:\"red\",paddingLeft:\"10px\",fontSize:\"18px\", marginTop:\"10px\"}}><p>{validation.contactNo}</p></span>}\r\n               </div>\r\n\r\n\r\n               \r\n\r\n               <button type=\"submit\"  className=\"btn btn-create\">Submit</button>\r\n               {error && <span style={{color:\"red\",paddingLeft:\"10px\",fontSize:\"20px\", marginTop:\"10px\"}}>Invalid Details!</span>}\r\n        </div>\r\n      </form>\r\n    \r\n    </div>\r\n    \r\n  )\r\n}\r\n\r\nexport default SocietyMemberSignUp;\r\n"]},"metadata":{},"sourceType":"module"}