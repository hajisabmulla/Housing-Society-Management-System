{"ast":null,"code":"var _jsxFileName = \"D:\\\\Personal Project MERN\\\\mern-blog-app\\\\client\\\\src\\\\pages\\\\register\\\\Register.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useState, useForm } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./register.css\";\nimport { Form, Button } from 'react-bootstrap'; // import { signUpFormValidation } from '../../context/validation'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Register() {\n  _s();\n\n  const {\n    register,\n    errors\n  } = useForm();\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(false);\n  const [success, setSuccess] = useState(false);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError(false);\n\n    try {\n      const res = await axios.post(\"/auth/register\", {\n        username,\n        email,\n        password\n      }).then(response => res.json()).then(data => {\n        if (data.error) throw Error(data.error);\n      }).catch(error => {\n        alert(error);\n      });\n      alert(\"User Created Successfully\");\n      setSuccess(true);\n      res.data && window.location.replace(\"/login\");\n    } catch (err) {\n      setError(true);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"registerTitle\",\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"registerForm\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"username\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          name: \"username\",\n          placeholder: \"Enter your username\",\n          autoComplete: \"off\",\n          onChange: e => setUsername(e.target.value),\n          ref: register({\n            required: 'Username is required.',\n            pattern: {\n              value: /^[a-zA-Z]+$/,\n              message: 'Username should contain only characters.'\n            }\n          }),\n          className: `${errors.username ? 'input-error' : ''}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), errors.username && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"errorMsg\",\n          children: errors.username.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"registerInput\",\n        placeholder: \"Enter your email...\",\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        className: \"registerInput\",\n        placeholder: \"Enter your password...\",\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"registerButton\",\n        type: \"submit\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"registerLoginButton\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        className: \"link\",\n        to: \"/login\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        color: \"red\",\n        fontSize: \"20px\",\n        marginTop: \"10px\"\n      },\n      children: \"Something went wrong!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }, this), success && /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        color: \"blue\",\n        marginTop: \"10px\"\n      },\n      children: \"User Created Successfully!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Register, \"DP9US5wWY6tYZnoXraVLjXT4LVM=\", false, function () {\n  return [useForm];\n});\n\n_c = Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["D:/Personal Project MERN/mern-blog-app/client/src/pages/register/Register.jsx"],"names":["axios","useState","useForm","Link","Form","Button","Register","register","errors","username","setUsername","email","setEmail","password","setPassword","error","setError","success","setSuccess","handleSubmit","e","preventDefault","res","post","then","response","json","data","Error","catch","alert","window","location","replace","err","target","value","required","pattern","message","color","fontSize","marginTop"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { useState, useForm } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./register.css\";\n\nimport { Form, Button } from 'react-bootstrap';\n\n// import { signUpFormValidation } from '../../context/validation'\n\n\nexport default function Register() {\n  \n\n  const { register, errors } = useForm();\n\n\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(false);\n  const [success , setSuccess] = useState(false);\n\n\n  \n  const handleSubmit = async (e) => {\n    e.preventDefault();\n   \n    \n\n    setError(false);\n    try {\n      const res = await axios.post(\"/auth/register\", {\n        username,\n        email,\n        password,\n      })\n       .then(response => res.json())\n       .then(data => {\n         if(data.error) throw Error(data.error)\n        \n       })\n       .catch( error => {alert( error)\n      \n   })   \n          \n          \n      alert(\"User Created Successfully\");\n      setSuccess(true);\n      res.data && window.location.replace(\"/login\");\n    } catch (err) {\n      setError(true);\n      \n    }\n  };\n \n  return (\n    <div className=\"register\">\n      <span className=\"registerTitle\">Register</span>\n      <form className=\"registerForm\" onSubmit={handleSubmit}>\n        {/* <label>Username</label>\n        <input\n          type=\"text\"\n          className=\"registerInput\"\n          placeholder=\"Enter your username...\"\n          onChange={(e) => setUsername(e.target.value)}\n        /> */}\n        <Form.Group controlId=\"username\">\n          <Form.Label>Username</Form.Label>\n          <Form.Control\n            type=\"text\"\n            name=\"username\"\n            placeholder=\"Enter your username\"\n            autoComplete=\"off\"\n            onChange={(e) => setUsername(e.target.value)}\n            ref={register({\n              required: 'Username is required.',\n              pattern: {\n                value: /^[a-zA-Z]+$/,\n                message: 'Username should contain only characters.'\n              }\n            })}\n            className={`${errors.username ? 'input-error' : ''}`}\n          />\n          {errors.username && (\n            <p className=\"errorMsg\">{errors.username.message}</p>\n          )}\n        </Form.Group>\n       \n        <label>Email</label>\n        <input\n          type=\"text\"\n          className=\"registerInput\"\n          placeholder=\"Enter your email...\"\n      \n          onChange={(e) => setEmail(e.target.value)}\n        />\n       \n        <label>Password</label>\n        <input\n       \n          type=\"password\"\n          className=\"registerInput\"\n          placeholder=\"Enter your password...\"\n          onChange={(e) => setPassword(e.target.value)}\n        />\n        <button className=\"registerButton\" type=\"submit\">\n          Register\n        </button>\n      </form>\n      <button className=\"registerLoginButton\">\n        <Link className=\"link\" to=\"/login\">\n          Login\n        </Link>\n      </button>\n      {error && <span style={{color:\"red\",fontSize:\"20px\",marginTop:\"10px\"}}>Something went wrong!</span>}\n      {success && <span style={{color:\"blue\", marginTop:\"10px\"}}>User Created Successfully!</span>}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}