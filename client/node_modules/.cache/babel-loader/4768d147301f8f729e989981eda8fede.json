{"ast":null,"code":"const pattern = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,6}$/;\n\nfunction isEmailAddress(str) {\n  return str.match(pattern);\n}\n\nconst signUpFormValidation = formData => {\n  const error = {};\n  const fields = ['email', 'password', 'name'];\n  fields.forEach(field => {\n    if (!formData[`${field}`]) {\n      error[[field]] = `${field} not present`;\n    }\n  });\n\n  if (formData.name && (formData.name.length < 3 || formData.name.length > 20)) {\n    error['name'] = 'Name should be atleast 4 chars and less than 20 chars';\n  }\n\n  if (formData.password && (formData.password.length < 6 || formData.password.length > 30)) {\n    error['password'] = 'Password should be atleast 6 chars and less than 30 chars';\n  }\n\n  if (formData.email && isEmailAddress(formData.email) === null) {\n    error['email'] = 'Not a valid email';\n  }\n\n  if (Object.keys(error).length === 0) return null;\n  return error;\n};\n\nexport { signUpFormValidation };","map":{"version":3,"sources":["D:/Personal Project MERN/mern-blog-app/client/src/context/validation.js"],"names":["pattern","isEmailAddress","str","match","signUpFormValidation","formData","error","fields","forEach","field","name","length","password","email","Object","keys"],"mappings":"AAAA,MAAMA,OAAO,GAAG,iDAAhB;;AAEA,SAASC,cAAT,CAAwBC,GAAxB,EAA6B;AAEzB,SAAOA,GAAG,CAACC,KAAJ,CAAUH,OAAV,CAAP;AAEH;;AAED,MAAMI,oBAAoB,GAAIC,QAAD,IAAc;AACvC,QAAMC,KAAK,GAAG,EAAd;AACA,QAAMC,MAAM,GAAG,CAAC,OAAD,EAAS,UAAT,EAAoB,MAApB,CAAf;AACAA,EAAAA,MAAM,CAACC,OAAP,CAAeC,KAAK,IAAE;AAClB,QAAG,CAACJ,QAAQ,CAAE,GAAEI,KAAM,EAAV,CAAZ,EAAyB;AACrBH,MAAAA,KAAK,CAAC,CAACG,KAAD,CAAD,CAAL,GAAkB,GAAEA,KAAM,cAA1B;AACH;AACJ,GAJD;;AAKA,MAAGJ,QAAQ,CAACK,IAAT,KAAkBL,QAAQ,CAACK,IAAT,CAAcC,MAAd,GAAuB,CAAvB,IAA4BN,QAAQ,CAACK,IAAT,CAAcC,MAAd,GAAuB,EAArE,CAAH,EAA4E;AACxEL,IAAAA,KAAK,CAAC,MAAD,CAAL,GAAgB,uDAAhB;AACH;;AACD,MAAGD,QAAQ,CAACO,QAAT,KAAsBP,QAAQ,CAACO,QAAT,CAAkBD,MAAlB,GAA2B,CAA3B,IAAiCN,QAAQ,CAACO,QAAT,CAAkBD,MAAlB,GAA2B,EAAlF,CAAH,EAAyF;AACrFL,IAAAA,KAAK,CAAC,UAAD,CAAL,GAAoB,2DAApB;AACH;;AAED,MAAGD,QAAQ,CAACQ,KAAT,IAAkBZ,cAAc,CAACI,QAAQ,CAACQ,KAAV,CAAd,KAAmC,IAAxD,EAA6D;AACzDP,IAAAA,KAAK,CAAC,OAAD,CAAL,GAAiB,mBAAjB;AACH;;AACD,MAAGQ,MAAM,CAACC,IAAP,CAAYT,KAAZ,EAAmBK,MAAnB,KAA8B,CAAjC,EAAoC,OAAO,IAAP;AACpC,SAAOL,KAAP;AACH,CApBD;;AAsBA,SAASF,oBAAT","sourcesContent":["const pattern = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,6}$/; \r\n\r\nfunction isEmailAddress(str) {\r\n\r\n    return str.match(pattern);    \r\n\r\n}\r\n\r\nconst signUpFormValidation = (formData) => {\r\n    const error = {}\r\n    const fields = ['email','password','name']\r\n    fields.forEach(field=>{\r\n        if(!formData[`${field}`]){\r\n            error[[field]] = `${field} not present`\r\n        }\r\n    })\r\n    if(formData.name && (formData.name.length < 3 || formData.name.length > 20)){\r\n        error['name'] = 'Name should be atleast 4 chars and less than 20 chars'\r\n    }\r\n    if(formData.password && (formData.password.length < 6  || formData.password.length > 30)){\r\n        error['password'] = 'Password should be atleast 6 chars and less than 30 chars'\r\n    }\r\n\r\n    if(formData.email && isEmailAddress(formData.email) === null){\r\n        error['email'] = 'Not a valid email'\r\n    }\r\n    if(Object.keys(error).length === 0) return null\r\n    return error\r\n}\r\n\r\nexport { signUpFormValidation }"]},"metadata":{},"sourceType":"module"}