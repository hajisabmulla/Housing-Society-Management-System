{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project Housing Society\\\\client\\\\src\\\\SecretaryPage\\\\SecretarySignUp.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SecretarySignUp = props => {\n  _s();\n\n  const [error, setError] = useState(false);\n  const [Secretary, setSecretary] = useState({\n    name: \"\",\n    username: \"\",\n    password: \"\"\n  });\n  const [validation, setValidation] = useState({\n    name: \"\",\n    username: \"\",\n    password: \"\"\n  });\n\n  const checkValidation = () => {\n    let errors = JSON.parse(JSON.stringify(validation)); //first Name validation\n\n    const name = Secretary.name;\n\n    if (!Secretary.name.trim()) {\n      errors.name = \"Name is required\";\n    } else if (name.length < 4) {\n      errors.name = \"Name must be longer than 4  characters\";\n    } else {\n      errors.name = \"\";\n    } //User Name validation\n\n\n    const username = Secretary.username;\n\n    if (!Secretary.username.trim()) {\n      errors.username = \"Username is required\";\n    } else if (username.length < 4) {\n      errors.username = \"Username must be longer than 4  characters\";\n    } else {\n      errors.username = \"\";\n    } //password validation\n\n\n    const cond1 = \"/^(?=.*[a-z]).{6,20}$/\";\n    const cond2 = \"/^(?=.*[A-Z]).{6,20}$\";\n    const cond3 = \"/^(?=.*[0-9]).{6,20}$\"; //  const cond2 = \"/^(?=.*[A-Z]).{6,20}$/\";\n    //  const cond3 = \"/^(?=.*[0-9]).{6,20}$/\";\n\n    const password = Secretary.password;\n\n    if (!password) {\n      errors.password = \"Password is required\";\n    } else if (Secretary.password.length < 6) {\n      errors.password = \"Password must be longer than 6 characters\";\n    } else if (Secretary.password.length >= 20) {\n      errors.password = \"Password must shorter than 20 characters\";\n    } else if (Secretary.password.match(cond1)) {\n      errors.password = \"Password must contain at least one lowercase\";\n    } else if (Secretary.password.match(cond2)) {\n      errors.password = \"Password must contain at least one capital letter\";\n    } else if (Secretary.password.match(cond3)) {\n      errors.password = \"Password must contain at least a number\";\n    } else {\n      errors.password = \"\";\n    }\n\n    setValidation(errors);\n  };\n\n  useEffect(() => {\n    checkValidation();\n  }, [Secretary]);\n  const navigate = useNavigate();\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const {\n      name,\n      username,\n      password\n    } = Secretary;\n    const response = await fetch(\"http://localhost:8000/api/auth/Secretary\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name,\n        username,\n        password\n      })\n    });\n    const json = await response.json();\n    console.log(json);\n\n    if (json.success) {\n      // save the auth token and redirect\n      localStorage.setItem('token', json.authtoken);\n      navigate(\"/SecretaryLogin\");\n      props.showAlert(alert(\"Account successfully created\", \"success\"));\n    } else {\n      // props.showAlert(\"Invalid Details\", \"danger\")\n      setError(true);\n    }\n  };\n\n  const handleChange = e => {\n    setSecretary({ ...Secretary,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"StSignUp-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"SPSt-left\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"App\",\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"SPSt-right\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Secretary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 18\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"name\",\n            id: \"name\",\n            placeholder: \"Enter First Name\",\n            className: \"form-control\",\n            onChange: e => handleChange(e),\n            value: Secretary.name,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 18\n          }, this), validation.name && /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: \"red\",\n              paddingLeft: \"10px\",\n              fontSize: \"18px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: validation.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 101\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 38\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"User Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 18\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"username\",\n            id: \"username\",\n            placeholder: \"Enter UserName\",\n            className: \"form-control\",\n            onChange: e => handleChange(e),\n            value: Secretary.username,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 18\n          }, this), validation.username && /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: \"red\",\n              paddingLeft: \"10px\",\n              fontSize: \"18px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: validation.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 107\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 44\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Set Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 18\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"password\",\n            id: \"password\",\n            placeholder: \"Password\",\n            className: \"form-control\",\n            onChange: e => handleChange(e),\n            value: Secretary.password,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 18\n          }, this), validation.password && /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: \"red\",\n              paddingLeft: \"10px\",\n              fontSize: \"18px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: validation.password\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 107\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 44\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-create\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 14\n        }, this), error && /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: \"red\",\n            paddingLeft: \"10px\",\n            fontSize: \"20px\",\n            marginTop: \"10px\"\n          },\n          children: \"Invalid Details!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 24\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SecretarySignUp, \"NwOz6kXNjU9ggrxTWFE2c8eOrfo=\", false, function () {\n  return [useNavigate];\n});\n\n_c = SecretarySignUp;\nexport default SecretarySignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SecretarySignUp\");","map":{"version":3,"sources":["D:/Project Housing Society/client/src/SecretaryPage/SecretarySignUp.js"],"names":["React","useEffect","useState","useNavigate","SecretarySignUp","props","error","setError","Secretary","setSecretary","name","username","password","validation","setValidation","checkValidation","errors","JSON","parse","stringify","trim","length","cond1","cond2","cond3","match","navigate","handleSubmit","e","preventDefault","response","fetch","method","headers","body","json","console","log","success","localStorage","setItem","authtoken","showAlert","alert","handleChange","target","value","color","paddingLeft","fontSize","marginTop"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { useEffect,useState} from 'react'\r\n\r\nimport { useNavigate } from 'react-router-dom';\r\nconst SecretarySignUp=(props)=> {\r\n\r\n  const [error, setError] = useState(false);\r\n  \r\n  const [Secretary, setSecretary] = useState({\r\n    name:\"\",\r\n    username:\"\",\r\n    password:\"\",\r\n\r\n  });\r\n\r\n\r\n  const [validation, setValidation] = useState({\r\n    name:\"\",\r\n   \r\n    username:\"\",\r\n   \r\n    password:\"\",\r\n    \r\n   \r\n    \r\n  });\r\n\r\n  const checkValidation = () => {\r\n    let errors = JSON.parse(JSON.stringify(validation));\r\n    \r\n    //first Name validation\r\n    const name = Secretary.name;\r\n    if (!Secretary.name.trim()) {\r\n      errors.name = \"Name is required\";\r\n    } else if (name.length < 4) {\r\n      errors.name = \"Name must be longer than 4  characters\";\r\n    }else {\r\n      errors.name = \"\";\r\n    }\r\n\r\n\r\n    //User Name validation\r\n    const username = Secretary.username;\r\n    if (!Secretary.username.trim()) {\r\n      errors.username = \"Username is required\";\r\n    } else if (username.length < 4) {\r\n      errors.username = \"Username must be longer than 4  characters\";\r\n    }else {\r\n      errors.username = \"\";\r\n    }\r\n\r\n  \r\n\r\n   //password validation\r\n   const cond1 = \"/^(?=.*[a-z]).{6,20}$/\";\r\n   const cond2 = \"/^(?=.*[A-Z]).{6,20}$\";\r\n   const cond3 = \"/^(?=.*[0-9]).{6,20}$\";\r\n   //  const cond2 = \"/^(?=.*[A-Z]).{6,20}$/\";\r\n  //  const cond3 = \"/^(?=.*[0-9]).{6,20}$/\";\r\n   const password = Secretary.password;\r\n   if (!password) {\r\n     errors.password = \"Password is required\";\r\n   } else if (Secretary.password.length < 6) {\r\n     errors.password = \"Password must be longer than 6 characters\";\r\n   } else if (Secretary.password.length >= 20) {\r\n     errors.password = \"Password must shorter than 20 characters\";\r\n   } else if(Secretary.password.match(cond1)) {\r\n      errors.password = \"Password must contain at least one lowercase\";\r\n    } \r\n    else if (Secretary.password.match(cond2)) {\r\n      errors.password = \"Password must contain at least one capital letter\";\r\n    } else if (Secretary.password.match(cond3)) {\r\n      errors.password = \"Password must contain at least a number\";\r\n    }\r\n    else {\r\n     errors.password = \"\";\r\n   }\r\n\r\n \r\n\r\n   setValidation(errors);\r\n };\r\n\r\n\r\n useEffect(() => {\r\n  checkValidation();\r\n}, [Secretary]);\r\n\r\n  \r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const {name, username, password} = Secretary;\r\n    const response = await fetch(\"http://localhost:8000/api/auth/Secretary\", {\r\n     \r\n        method: 'POST',\r\n\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n             },\r\n             body: JSON.stringify({name , username, password })\r\n\r\n    });\r\n    const json = await response.json()\r\n    console.log(json);\r\n    if(json.success){\r\n        // save the auth token and redirect\r\n        localStorage.setItem('token', json.authtoken)\r\n        navigate(\"/SecretaryLogin\")\r\n        props.showAlert(alert(\"Account successfully created\", \"success\"))\r\n    }\r\n    else{\r\n      // props.showAlert(\"Invalid Details\", \"danger\")\r\n      setError(true);\r\n    }\r\n    \r\n}\r\nconst handleChange= (e)=>{\r\n    setSecretary({...Secretary, [e.target.name]: e.target.value})\r\n}\r\n\r\n  \r\n  \r\n\r\n\r\n\r\n\r\n  return (\r\n    <div className='StSignUp-page'>\r\n        \r\n      \r\n    <div className='SPSt-left'>\r\n\r\n  </div>\r\n  <form  className='App' onSubmit={handleSubmit}>\r\n      <div className='SPSt-right'>\r\n    <h1>Secretary</h1>\r\n             \r\n             <div>\r\n                 <label>Name</label>\r\n                 <input type=\"text\" \r\n                  name=\"name\" \r\n                  id=\"name\" \r\n                  placeholder=\"Enter First Name\" \r\n                  className=\"form-control\"\r\n                  onChange={(e) => handleChange(e)}\r\n                  value={Secretary.name}\r\n                  required\r\n                \r\n                />\r\n                {validation.name &&  <span style={{color:\"red\",paddingLeft:\"10px\",fontSize:\"18px\"}}><p>{validation.name}</p></span>}\r\n             </div>\r\n\r\n             <div>\r\n                 <label>User Name</label>\r\n                 <input type=\"text\" \r\n                 name=\"username\" \r\n                  \r\n                 id=\"username\" \r\n                 placeholder=\"Enter UserName\" \r\n                 className=\"form-control\"\r\n                 onChange={(e) => handleChange(e)}\r\n                  value={Secretary.username}\r\n                  required\r\n                />\r\n                  {validation.username &&  <span style={{color:\"red\",paddingLeft:\"10px\",fontSize:\"18px\"}}><p>{validation.username}</p></span>}\r\n\r\n             </div>\r\n\r\n             <div>\r\n                 <label>Set Password</label>\r\n                 <input type=\"password\"  \r\n                 name=\"password\" \r\n                  \r\n                 id=\"password\" \r\n                 placeholder=\"Password\" \r\n                 className=\"form-control\"\r\n                onChange={(e) => handleChange(e)}\r\n                  value={Secretary.password}\r\n                  required\r\n                />\r\n                  {validation.password &&  <span style={{color:\"red\",paddingLeft:\"10px\",fontSize:\"18px\"}}><p>{validation.password}</p></span>}\r\n\r\n                \r\n                \r\n             </div>\r\n\r\n             <button type=\"submit\" className=\"btn btn-create\">Submit</button>\r\n             {error && <span style={{color:\"red\",paddingLeft:\"10px\",fontSize:\"20px\", marginTop:\"10px\"}}>Invalid Details!</span>}\r\n      </div>\r\n    </form>\r\n  \r\n  </div>\r\n  )\r\n}\r\n\r\nexport default SecretarySignUp\r\n"]},"metadata":{},"sourceType":"module"}