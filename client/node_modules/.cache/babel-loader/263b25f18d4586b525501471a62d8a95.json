{"ast":null,"code":"var _jsxFileName = \"D:\\\\Personal Project MERN\\\\mern-blog-app\\\\client\\\\src\\\\pages\\\\register\\\\Register.jsx\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./register.css\"; // import { signUpFormValidation } from '../../context/validation'\n// export default function Register() {\n//   const [username, setUsername] = useState(\"\");\n//   const [email, setEmail] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [error, setError] = useState(false);\n//   const [success , setSuccess] = useState(false);\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     setError(false);\n//     try {\n//       const res = await axios.post(\"/auth/register\", {\n//         username,\n//         email,\n//         password,\n//       });\n//       alert(\"User Created Successfully\");\n//       setSuccess(true);\n//       res.data && window.location.replace(\"/login\");\n//     } catch (err) {\n//       setError(true);\n//     }\n//   };\n//   return (\n//     <div className=\"register\">\n//       <span className=\"registerTitle\">Register</span>\n//       <form className=\"registerForm\" onSubmit={handleSubmit}>\n//         <label>Username</label>\n//         <input\n//           type=\"text\"\n//           className=\"registerInput\"\n//           placeholder=\"Enter your username...\"\n//           onChange={(e) => setUsername(e.target.value)}\n//         />\n//         <label>Email</label>\n//         <input\n//           type=\"text\"\n//           className=\"registerInput\"\n//           placeholder=\"Enter your email...\"\n//           onChange={(e) => setEmail(e.target.value)}\n//         />\n//         <label>Password</label>\n//         <input\n//           type=\"password\"\n//           className=\"registerInput\"\n//           placeholder=\"Enter your password...\"\n//           onChange={(e) => setPassword(e.target.value)}\n//         />\n//         <button className=\"registerButton\" type=\"submit\">\n//           Register\n//         </button>\n//       </form>\n//       <button className=\"registerLoginButton\">\n//         <Link className=\"link\" to=\"/login\">\n//           Login\n//         </Link>\n//       </button>\n//       {error && <span style={{color:\"red\",fontSize:\"20px\",marginTop:\"10px\"}}>Something went wrong!</span>}\n//       {success && <span style={{color:\"blue\", marginTop:\"10px\"}}>User Created Successfully!</span>}\n//     </div>\n//   );\n// }\n\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Register extends Component {\n  constructor() {\n    super();\n    this.state = {\n      formFields: {\n        username: '',\n        email: '',\n        password: ''\n      },\n      errors: {}\n    }; // To bind different events\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  // When any field value changed\n  handleChange(event) {\n    let formFields = this.state.formFields;\n    formFields[event.target.name] = event.target.value;\n    this.setState({\n      formFields\n    });\n  } // To validate all form fields\n\n\n  validate() {\n    let formFields = this.state.formFields;\n    let errors = {};\n    let IsValid = true;\n\n    if (!formFields[\"userame\"]) {\n      IsValid = false;\n      errors[\"username\"] = \"Enter Your Username\";\n    } // To allow only alphabets value\n\n\n    if (typeof formFields[\"username\"] !== \"undefined\") {\n      if (!formFields[\"username\"].match(/^[a-zA-Z ]*$/)) {\n        IsValid = false;\n        errors[\"username\"] = \"Only Alphabet Characters Are Allowed\";\n      }\n    }\n\n    if (!formFields[\"email\"]) {\n      IsValid = false;\n      errors[\"email\"] = \"Enter Your Email\";\n    } // To allow valid email format\n\n\n    if (typeof formFields[\"email\"] !== \"undefined\") {\n      var pattern = new RegExp(/^[a-z][a-zA-Z0-9_]*(\\.[a-zA-Z][a-zA-Z0-9_]*)?@[a-z][a-zA-Z-0-9]*\\.[a-z]+(\\.[a-z]+)?$/);\n\n      if (!pattern.test(formFields[\"email\"])) {\n        IsValid = false;\n        errors[\"email\"] = \"Invalid Email\";\n      }\n    }\n\n    if (!formFields[\"password\"]) {\n      IsValid = false;\n      errors[\"password\"] = \"Enter The Password\";\n    } // Should have valid password format\n\n\n    if (typeof formFields[\"password\"] !== \"undefined\") {\n      if (!formFields[\"password\"].match(\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})\")) {\n        IsValid = false;\n        errors[\"password\"] = \"Enter Valid Password\";\n      }\n    }\n\n    this.setState({\n      errors: errors\n    });\n    return IsValid;\n  } // When user submits the form after validation\n\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    if (this.validate()) {\n      let formFields = {};\n      formFields[\"username\"] = \"\";\n      formFields[\"email\"] = \"\";\n      formFields[\"password\"] = \"\";\n      this.setState({\n        formFields: formFields\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      style: {\n        width: '315px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Employee Registration With Different Validations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 2\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"First Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 2\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control\",\n            type: \"text\",\n            name: \"username\",\n            value: this.state.formFields.username,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 2\n          }, this), this.state.errors.username && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"alert alert-danger\",\n            children: this.state.errors.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 2\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 2\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 2\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control\",\n            type: \"text\",\n            name: \"email\",\n            value: this.state.formFields.email,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 2\n          }, this), this.state.errors.email && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"alert alert-danger\",\n            children: this.state.errors.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 2\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 2\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 2\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control\",\n            type: \"text\",\n            name: \"password\",\n            value: this.state.formFields.password,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 2\n          }, this), this.state.errors.password && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"alert alert-danger\",\n            children: this.state.errors.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 2\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 2\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          value: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 2\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 2\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 2\n    }, this);\n  }\n\n}\n\nexport default Register;","map":{"version":3,"sources":["D:/Personal Project MERN/mern-blog-app/client/src/pages/register/Register.jsx"],"names":["axios","useState","Link","React","Component","Register","constructor","state","formFields","username","email","password","errors","handleChange","bind","handleSubmit","event","target","name","value","setState","validate","IsValid","match","pattern","RegExp","test","preventDefault","render","width"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./register.css\";\n\n\n// import { signUpFormValidation } from '../../context/validation'\n\n\n// export default function Register() {\n  \n\n \n\n//   const [username, setUsername] = useState(\"\");\n//   const [email, setEmail] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [error, setError] = useState(false);\n//   const [success , setSuccess] = useState(false);\n\n\n  \n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n   \n    \n\n//     setError(false);\n//     try {\n//       const res = await axios.post(\"/auth/register\", {\n//         username,\n//         email,\n//         password,\n//       });\n//       alert(\"User Created Successfully\");\n//       setSuccess(true);\n//       res.data && window.location.replace(\"/login\");\n//     } catch (err) {\n//       setError(true);\n      \n//     }\n//   };\n \n//   return (\n//     <div className=\"register\">\n//       <span className=\"registerTitle\">Register</span>\n//       <form className=\"registerForm\" onSubmit={handleSubmit}>\n//         <label>Username</label>\n//         <input\n//           type=\"text\"\n//           className=\"registerInput\"\n//           placeholder=\"Enter your username...\"\n//           onChange={(e) => setUsername(e.target.value)}\n//         />\n       \n//         <label>Email</label>\n//         <input\n//           type=\"text\"\n//           className=\"registerInput\"\n//           placeholder=\"Enter your email...\"\n      \n//           onChange={(e) => setEmail(e.target.value)}\n//         />\n       \n//         <label>Password</label>\n//         <input\n       \n//           type=\"password\"\n//           className=\"registerInput\"\n//           placeholder=\"Enter your password...\"\n//           onChange={(e) => setPassword(e.target.value)}\n//         />\n//         <button className=\"registerButton\" type=\"submit\">\n//           Register\n//         </button>\n//       </form>\n//       <button className=\"registerLoginButton\">\n//         <Link className=\"link\" to=\"/login\">\n//           Login\n//         </Link>\n//       </button>\n//       {error && <span style={{color:\"red\",fontSize:\"20px\",marginTop:\"10px\"}}>Something went wrong!</span>}\n//       {success && <span style={{color:\"blue\", marginTop:\"10px\"}}>User Created Successfully!</span>}\n//     </div>\n//   );\n// }\n\n\n\nimport React, { Component } from 'react';\n\nclass Register extends Component {\n\n constructor() {\n super();\n this.state = {\n formFields: {\n username: '',\n \n email: '',\n password: ''\n },\n errors: {}\n }\n // To bind different events\n this.handleChange = this.handleChange.bind(this);\n this.handleSubmit = this.handleSubmit.bind(this);\n };\n\n // When any field value changed\n handleChange(event) {\n let formFields = this.state.formFields;\n formFields[event.target.name] = event.target.value;\n this.setState({\n formFields\n });\n }\n\n // To validate all form fields\n validate() {\n let formFields = this.state.formFields;\n let errors = {};\n let IsValid = true;\n\n if (!formFields[\"userame\"]) {\n IsValid = false;\n errors[\"username\"] = \"Enter Your Username\";\n }\n\n // To allow only alphabets value\n if (typeof formFields[\"username\"] !== \"undefined\") {\n if (!formFields[\"username\"].match(/^[a-zA-Z ]*$/)) {\n IsValid = false;\n errors[\"username\"] = \"Only Alphabet Characters Are Allowed\";\n }\n }\n\n \n\n if (!formFields[\"email\"]) {\n IsValid = false;\n errors[\"email\"] = \"Enter Your Email\";\n }\n\n // To allow valid email format\n if (typeof formFields[\"email\"] !== \"undefined\") {\n var pattern = new RegExp(/^[a-z][a-zA-Z0-9_]*(\\.[a-zA-Z][a-zA-Z0-9_]*)?@[a-z][a-zA-Z-0-9]*\\.[a-z]+(\\.[a-z]+)?$/);\n if (!pattern.test(formFields[\"email\"])) {\n IsValid = false;\n errors[\"email\"] = \"Invalid Email\";\n }\n }\n\n if (!formFields[\"password\"]) {\n IsValid = false;\n errors[\"password\"] = \"Enter The Password\";\n }\n\n // Should have valid password format\n if (typeof formFields[\"password\"] !== \"undefined\") {\n if (!formFields[\"password\"].match(\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})\")) {\n IsValid = false;\n errors[\"password\"] = \"Enter Valid Password\";\n }\n }\n\n this.setState({\n errors: errors\n });\n return IsValid;\n }\n\n // When user submits the form after validation\n handleSubmit(event) {\n event.preventDefault();\n if (this.validate()) {\n let formFields = {};\n formFields[\"username\"] = \"\";\n\n formFields[\"email\"] = \"\";\n formFields[\"password\"] = \"\";\n this.setState({ formFields: formFields });\n }\n }\n\n render() {\n return (\n <div className=\"container\" style={{ width: '315px' }}>\n <h3>Employee Registration With Different Validations</h3>\n <form onSubmit={this.handleSubmit} >\n <div className=\"form-group\">\n <label>First Name</label>\n <input className=\"form-control\"\n type=\"text\"\n name=\"username\"\n value={this.state.formFields.username}\n onChange={this.handleChange} />\n {this.state.errors.username &&\n <div className=\"alert alert-danger\">\n {this.state.errors.username}\n </div>\n }\n </div>\n\n <div className=\"form-group\">\n <label>Email</label>\n <input className=\"form-control\"\n type=\"text\"\n name=\"email\"\n value={this.state.formFields.email}\n onChange={this.handleChange} />\n {this.state.errors.email &&\n <div className=\"alert alert-danger\">\n {this.state.errors.email}\n </div>\n }\n </div>\n <div className=\"form-group\">\n <label>Password</label>\n <input className=\"form-control\"\n type=\"text\"\n name=\"password\"\n value={this.state.formFields.password}\n onChange={this.handleChange} />\n {this.state.errors.password &&\n <div className=\"alert alert-danger\">\n {this.state.errors.password}\n </div>\n }\n </div>\n <input type=\"submit\" className=\"btn btn-primary\" value=\"Submit\" />\n </form>\n </div >\n );\n }\n}\n\nexport default Register;"]},"metadata":{},"sourceType":"module"}